import{d as _,j as p,c as i,q as s,l as r,p as u,b as m,a as e,o as b,v as n,O as y,m as N,_ as f}from"./index-a2eccc6b.js";const c=o=>(u("data-v-fff98295"),o=o(),m(),o),h={class:"box"},I=c(()=>e("h3",null,"比较常用的Number的方法",-1)),x=c(()=>e("span",{style:{"font-weight":"400"}}," (绿色为自己调用，红色为Number对象调用)",-1)),U={style:{"word-break":"auto-phrase"}},g=["innerHTML"],v=_({__name:"NumberAbout",setup(o){const d=[{property:"MAX_VALUE",desc:"可表示的最大的数。",rootUse:!0},{property:"MIN_VALUE",desc:"可表示的最小的数。",rootUse:!0},{property:"NEGATIVE_INFINITY",desc:"返回负无穷大， 溢出时返回此值。",rootUse:!0},{property:"POSITIVE_INFINITY",desc:"返回正无穷大， 溢出时返回此值。",rootUse:!0},{property:"NaN",desc:"返回非数字值。",rootUse:!0},{property:"isNaN(any)",desc:"判断是否是一个NaN数字。",rootUse:!0},{property:"isFinite(number)",desc:"判断是否是一个有限数。",rootUse:!0},{property:"isSafeInteger(number)",desc:"判断是否是一个安全的整数（-2**53-1 ~ 2**53-1）。",rootUse:!0},{property:"parseFloat(string)",desc:"将字符串的形式的数字转为Number型的浮点数字。",rootUse:!0},{property:"parseInt(string, radix)",desc:"将字符串的形式的数字转为Number型的整型数字。radix：转换的进制，默认为10进制。",rootUse:!0},{property:"toExponential()",desc:"返回一个数的科学计数法形式。如：(12345).toExponential();得到：1.2345e+4"},{property:"toFixed(number)",desc:`将数字转换为字符串，并保留指定位数的小数。注意保留的算法并不是四舍五入。如：
    <pre><code>console.log((2).toFixed(2)) // 2.00
console.log((2.535).toFixed(2)) // 2.54
console.log((2.545).toFixed(2)) // 2.54
</code></pre>`},{property:"toPrecision(number)",desc:`把数字格式化成指定长度的科学计数法表示，多余的按四舍五入。如：
    (123456).toPrecision(2)) 得到： 1.2e+5`},{property:"toString()",desc:"返回数字的字符串。"},{property:"valueOf()",desc:"返回数字本身的值。"},{property:"toLocaleString()",desc:"返回该数字的千分号形式的字符串。"}];return(w,E)=>{const a=p("el-table-column"),l=p("el-table");return b(),i("div",h,[I,s(l,{data:d,border:""},{default:r(()=>[s(a,{"min-width":"220"},{header:r(()=>[n(" 属性或方法 "),x]),default:r(t=>[e("div",U,[e("span",{class:y(t.row.rootUse?"proto":"self")},null,2),n(N(t.row.property),1)])]),_:1}),s(a,{label:"描述","min-width":"300"},{default:r(t=>[e("div",{style:{"word-break":"auto-phrase"},innerHTML:t.row.desc},null,8,g)]),_:1})]),_:1})])}}});const S=f(v,[["__scopeId","data-v-fff98295"]]);export{S as default};
